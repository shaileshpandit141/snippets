{
  "Default tsx component for React": {
    "prefix": "rfce",
    "body": [
      "import React, { FC, JSX } from \"react\";",
      "import \"./${0:Snippet}.css\";",
      "",
      "interface ${0:Snippet}Props { }",
      "",
      "const ${0:Snippet}: FC<${0:Snippet}Props> = (props): JSX.Element => {",
      "  return (",
      "    <div>${0:Snippet}</div>",
      "  )",
      "}",
      "",
      "export default ${0:Snippet};",
      ""
    ],
    "description": "Creates a default tsx component for React"
  },
  "React event handler": {
    "prefix": "eventHandler",
    "body": [
      "const handle${1:Event} = (event: React.${2:MouseEvent}<HTML${3:Element}>) => {",
      "  ${0}",
      "};"
    ],
    "description": "Creates a React event handler function"
  },
  "React useState hook": {
    "prefix": "useState",
    "body": [
      "const [${1:state}, set${1/(.*)/${1:/capitalize}/}] = useState<${2:type}>(${3:initialValue});"
    ],
    "description": "Creates a React useState hook"
  },
  "React useEffect hook": {
    "prefix": "useEffect",
    "body": ["useEffect(() => {", "  ${1}", "}, [${2}]);"],
    "description": "Creates a React useEffect hook"
  },
  "React useCallback hook": {
    "prefix": "useCallback",
    "body": [
      "const ${1:callback} = useCallback((${2:params}) => {",
      "  ${3}",
      "}, [${4}]);"
    ],
    "description": "Creates a React useCallback hook"
  }
}
